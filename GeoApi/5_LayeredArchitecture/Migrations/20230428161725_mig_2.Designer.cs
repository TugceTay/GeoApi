// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Repositories.EfCore;

#nullable disable

namespace _5_LayeredArchitecture.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20230428161725_mig_2")]
    partial class mig_2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Entities.Models.Building", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Blok")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nitelik")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("fKey")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Buildings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Blok = "b1",
                            Nitelik = "n1",
                            fKey = 1
                        },
                        new
                        {
                            Id = 2,
                            Blok = "b2",
                            Nitelik = "n2",
                            fKey = 2
                        });
                });

            modelBuilder.Entity("Entities.Models.Parcel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Ada")
                        .HasColumnType("integer");

                    b.Property<string>("Pafta")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ParcelNo")
                        .HasColumnType("integer");

                    b.Property<string>("il")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ilce")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("mahalle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nitelik")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Parcels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ada = 1,
                            Pafta = "p1",
                            ParcelNo = 1,
                            il = "il1",
                            ilce = "ilce1",
                            mahalle = "m1",
                            nitelik = "n1"
                        },
                        new
                        {
                            Id = 2,
                            Ada = 2,
                            Pafta = "p2",
                            ParcelNo = 2,
                            il = "il2",
                            ilce = "ilce2",
                            mahalle = "m2",
                            nitelik = "n2"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
